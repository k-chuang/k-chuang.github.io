I"é<p>I fixed my first software-related bug at work this week! Super proud of myself, and this blog post is dedicated to kind of how I did it using what I learned (on my own personal time).</p>
<p>I pushed the fix to <strong>gerrit</strong>, a code review repository software that my work uses, and am waiting for feedback. I also wrote a couple more useful Python wrapper scripts that utilize some cool intermediate Python concepts that I recently learned.</p>
<p>Coming from a test engineer role, I typically report bugs and propose new potential features, and file these as <strong>JIRA</strong> tickets. Due to other more important action items in the current sprint,Â  the developers that I work with did not have time to work on this issue; thus I took the initiative to fix this bug. Ironically, I had filed the <strong>JIRA</strong> bug that I implemented the fix for.</p>
<p>I do want to note that this bug was also a blocker to one of the tasks I had to do, but I was also genuinely interested in fixing it and enhancing my programming skillset.</p>
<p>In the fix and in the wrapper Python scripts, I used some cool intermediate Python concepts, including:</p>
<ul>
<li>static methods</li>
<li>generators</li>
<li>recursion</li>
</ul>
<p>Also, I familiarized myself with<strong> git</strong> and <strong>gerrit</strong>, which is kind of a code review repository for collaboration among teams. I have a <strong>GitHub</strong>, which is another type of code review repository, so I was semi-familiar with some basic git commands and functionality.</p>
<p>From some research I did this week, <strong>git</strong> is a distributed version control tool for tracking changes in files/code/programs and for coordinating work on these files/code/programs among multiple developers, and <strong>gerrit</strong> is built and integrated on top of git.</p>
<p>For more information aboutÂ <strong>gerrit</strong>, check out the thisÂ <strong>gerrit</strong> documentation:Â <a href="https://gerrit-review.googlesource.com/Documentation/intro-user.html" target="_blank" rel="noopener">https://gerrit-review.googlesource.com/Documentation/intro-user.html</a></p>
<p>Some useful <strong>git</strong> commands for me to remember are:</p>
<ul>
<li>git log</li>
<li>git reflog</li>
</ul>
<p>Looks like the personal time I put in is actually paying off! Hopefully the code review goes well~</p>
<p><strong>UPDATE (March 30, 2018)</strong>: I received a +2 on the <strong>gerrit</strong> <strong>code review</strong>, meaning my changes to the API were approved and merged! I also received compliments regarding how "beautiful" and well written the Python code was from the manager and a software engineer working under him. However, one of my other commits (with the wrapper Python scripts) was rejected (review label value of -2), since the manager suggested that I implement these wrapper scripts into the <strong>command line utility</strong>, instead of separate Python wrapper scripts, which I quickly fixed. I implemented a recursion argument into theÂ <strong>command line utility</strong>, and it is now one of the features of the API. ThatÂ <strong>patch set</strong> with this new feature was also approved and merged into the API.</p>
<p>See here for more details regardingÂ <strong>gerrit code reviewÂ </strong>and theÂ <strong>review labels</strong>:Â <a href="https://gerrit-review.googlesource.com/Documentation/config-labels.html" target="_blank" rel="noopener">https://gerrit-review.googlesource.com/Documentation/config-labels.html</a></p>
<p>&nbsp;</p>
:ET